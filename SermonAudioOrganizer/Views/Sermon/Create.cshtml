@model SermonAudioOrganizer.Models.SermonEditViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>SermonEditViewModel</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.Title)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Title)
            @Html.ValidationMessageFor(model => model.Title)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.RecordingDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.RecordingDate)
            @Html.ValidationMessageFor(model => model.RecordingDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Topic)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Topic)
            @Html.ValidationMessageFor(model => model.Topic)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Comment)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Comment)
            @Html.ValidationMessageFor(model => model.Comment)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.LocationId)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.LocationId, Model.Locations)
            @Html.ValidationMessageFor(model => model.LocationId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PreacherId)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.PreacherId, Model.Preachers)
            @Html.ValidationMessageFor(model => model.PreacherId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.SeriesId)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.SeriesId, Model.Serieses)
            @Html.ValidationMessageFor(model => model.SeriesId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.SectionId)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.SectionId, Model.Sections)
            @Html.ValidationMessageFor(model => model.SectionId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.SeriesIndex)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.SeriesIndex)
            @Html.ValidationMessageFor(model => model.SeriesIndex)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.SeriesIndex)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.SeriesIndex)
            @Html.ValidationMessageFor(model => model.SeriesIndex)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.SeriesSubIndex)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.SeriesSubIndex)
            @Html.ValidationMessageFor(model => model.SeriesSubIndex)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.File)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.File)
            @Html.ValidationMessageFor(model => model.File)
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
