@model SermonAudioOrganizer.Models.SermonEditViewModel

@{
    ViewBag.Title = "Edit Sermon";
}

<h2>Edit Sermon</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Sermon</legend>
        <div class="form-group">
            <div class="editor-label">
                @Html.LabelFor(model => model.Title)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.Title, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Title)
            </div>
        </div>

        <div class="form-group">
            <div class="editor-label">
                @Html.LabelFor(model => model.RecordingDate)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.RecordingDate)
                @Html.ValidationMessageFor(model => model.RecordingDate)
            </div>
        </div>

        <div class="form-group">
            <div class="editor-label">
                @Html.LabelFor(model => model.Topic)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.Topic, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Topic)
            </div>
        </div>

        <div class="form-group">
            <div class="editor-label">
                @Html.LabelFor(model => model.Passages)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.Passages, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Passages)
            </div>
        </div>

        <div class="form-group">
            <div class="editor-label">
                @Html.LabelFor(model => model.Comment)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.Comment, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Comment)
            </div>
        </div>

        <div class="form-group">
            <div class="editor-label">
                @Html.LabelFor(model => model.LocationId)
            </div>
            <div class="editor-field">
                @Html.DropDownListFor(model => model.LocationId, Model.Locations, "", new { @class = "form-control" }) 
                @Html.ActionLink("Add Location", "Create", "Location")
                @Html.ValidationMessageFor(model => model.LocationId)
            </div>
        </div>

        <div class="form-group">
            <div class="editor-label">
                @Html.LabelFor(model => model.PreacherId)
            </div>
            <div class="editor-field">
                @Html.DropDownListFor(model => model.PreacherId, Model.Preachers, "", new { @class = "form-control" }) 
                @Html.ActionLink("Add Preacher", "Create", "Preacher")
                @Html.ValidationMessageFor(model => model.PreacherId)
            </div>
        </div>

        <div class="form-group">
            <div class="editor-label">
                @Html.LabelFor(model => model.SeriesId)
            </div>
            <div class="editor-field">
                @Html.DropDownListFor(model => model.SeriesId, Model.Serieses, "", new { @class = "form-control" }) 
                @Html.ActionLink("Add Series", "Create", "Series")
                @Html.ValidationMessageFor(model => model.SeriesId)
            </div>
        </div>

        <div class="form-group">
            <div class="editor-label">
                @Html.LabelFor(model => model.SeriesIndex)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.SeriesIndex, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SeriesIndex)
            </div>
        </div>

        <div class="form-group">
            <div class="editor-label">
                @Html.LabelFor(model => model.SectionId)
            </div>
            <div class="editor-field">
                @Html.DropDownListFor(model => model.SectionId, Model.Sections, "", new { @class = "form-control" }) 
                @Html.ActionLink("Add Section", "Create", "Section")
                @Html.ValidationMessageFor(model => model.SectionId)
            </div>
        </div>

        <div class="form-group">
            <div class="editor-label">
                @Html.LabelFor(model => model.SectionIndex)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.SectionIndex, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SectionIndex)
            </div>
        </div>

        <p>
            @Html.ActionLink("Add Media", "AddMedia", new { sermonId = Model.Id })
        </p>
        @if (Model.SermonMedia != null)
        {
            <div>
                <table class="table">
                    <tr>
                        <th>
                            Name
                        </th>
                        <th>
                            Type
                        </th>
                        <th></th>
                    </tr>

                    @foreach (var media in Model.SermonMedia)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => media.Name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => media.Type)
                            </td>
                            <td>
                                @Html.ActionLink("Remove Media", "RemoveMedia", new { sermonId = Model.Id, mediaId = media.Id }, null)
                            </td>
                        </tr>
                    }

                </table>
            </div>
        }

        <p>
            <input type="submit" value="Save" class="btn btn-default" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
