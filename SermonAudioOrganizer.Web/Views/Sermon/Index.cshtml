@model IEnumerable<SermonAudioOrganizer.Domain.Sermon>

@{
    ViewBag.Title = "Sermon List";
}

<h2>Sermons</h2>

@using (Html.BeginForm("Index", "Sermon", FormMethod.Get, new { @class = "form-inline" }))
{
    <div class="form-group">
        <label for="searchTitle">Search by title</label>
        @Html.TextBox("searchTitle", ViewBag.CurrentFilter as string, new { @class = "form-control" })
    </div>
    <input type="submit" value="Search" />
}


<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.RecordingDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Title)
        </th>
        <th>
            Preacher
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Topic)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Comment)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SeriesIndex)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SectionIndex)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.RecordingDate)
            </td>
            <td>
                <a href="@System.Configuration.ConfigurationManager.AppSettings["BaseUrl"]@Html.DisplayTextFor(modelItem => item.SermonMedia[0].Name)">
                    @Html.DisplayFor(modelItem => item.Title)
                </a>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SermonPreacher.FirstName) @Html.DisplayFor(modelItem => item.SermonPreacher.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Topic)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Comment)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SeriesIndex)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SectionIndex)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </td>
        </tr>
    }

</table>

@Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { page = page }))
